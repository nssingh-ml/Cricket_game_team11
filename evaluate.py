# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from final_score import Ui_Form as Score
import sqlite3
import logging
logging.basicConfig(level=logging.INFO)
match=sqlite3.connect('CRICKET.db')
match_cur=match.cursor()


class Ui_MainWindow(object):

    # initialising score window
    def __init__(self):
        self.scoreDialog = QtWidgets.QMainWindow()
        self.score_screen = Score()
        self.score_screen.setupUi(self.scoreDialog)


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(935, 729)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(210, 10, 451, 51))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Condensed")
        font.setPointSize(15)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.select_match_cb = QtWidgets.QComboBox(self.centralwidget)
        self.select_match_cb.setEnabled(True)
        self.select_match_cb.setGeometry(QtCore.QRect(510, 80, 341, 41))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Condensed")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)

        ##combo boxes
        self.select_match_cb.setFont(font)
        self.select_match_cb.setAutoFillBackground(False)
        self.select_match_cb.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.select_match_cb.setDuplicatesEnabled(False)
        self.select_match_cb.setObjectName("select_match_cb")
        self.select_match_cb.addItem("")
        self.select_match_cb.addItem("")
        self.select_team_scb = QtWidgets.QComboBox(self.centralwidget)
        self.select_team_scb.setGeometry(QtCore.QRect(70, 90, 321, 22))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Condensed")
        font.setPointSize(10)
        font.setItalic(True)
        self.select_team_scb.setFont(font)
        self.select_team_scb.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.select_team_scb.setObjectName("select_team_scb")

        ##buttons
        self.cal_score_btn = QtWidgets.QPushButton(self.centralwidget)
        self.cal_score_btn.setGeometry(QtCore.QRect(370, 630, 141, 41))
        self.cal_score_btn.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Papyrus")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.cal_score_btn.setFont(font)
        self.cal_score_btn.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.cal_score_btn.setObjectName("cal_score_btn")

        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(44, 150, 821, 461))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Condensed")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_8.addWidget(self.label_2)
        self.player_lw = QtWidgets.QListWidget(self.horizontalLayoutWidget)
        self.player_lw.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.player_lw.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.player_lw.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.player_lw.setObjectName("player_lw")
        self.verticalLayout_8.addWidget(self.player_lw)
        self.horizontalLayout.addLayout(self.verticalLayout_8)
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout.addWidget(self.label_4)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Condensed")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_5.addWidget(self.label_3)
        self.point_lw = QtWidgets.QListWidget(self.horizontalLayoutWidget)
        self.point_lw.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.point_lw.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.point_lw.setAutoScroll(True)
        self.point_lw.setDefaultDropAction(QtCore.Qt.IgnoreAction)
        self.point_lw.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.point_lw.setProperty("isWrapping", False)
        self.point_lw.setObjectName("point_lw")
        self.verticalLayout_5.addWidget(self.point_lw)
        self.horizontalLayout.addLayout(self.verticalLayout_5)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 935, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.select_match_cb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # score button
        self.cal_score_btn.clicked.connect(self.final_score)

        seleted_team= self.select_team_scb.currentText()



        self.changedname(seleted_team)
        self.select_team_scb.currentTextChanged.connect(self.changedname)

        x = match_cur.execute('select distinct name from teams;')
        team = x.fetchall()
        for i in team:
            self.select_team_scb.addItem(i[0])

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "*****Evaluate Your Fantasy Team Performance******"))
        self.select_match_cb.setCurrentText(_translate("MainWindow", "Select Match"))
        self.select_match_cb.setItemText(0, _translate("MainWindow", "Select Match"))
        self.select_match_cb.setItemText(1, _translate("MainWindow", "Match1"))
        self.cal_score_btn.setStatusTip(_translate("MainWindow", "calculate score"))
        self.cal_score_btn.setText(_translate("MainWindow", "SCORE"))
        self.label_2.setText(_translate("MainWindow", "Players"))
        self.label_4.setText(_translate("MainWindow", "  >>        "))
        self.label_3.setText(_translate("MainWindow", "Points"))


        # x=match_cur.execute()
        # team=x.fetchall()
        # for i in team:
        #     self.select_team_scb.additems(i[0])
    def changedname(self,t):
        self.player_lw.clear()
        self.point_lw.clear()
        y=match_cur.execute("select players from teams where name='"+ t +"';")
        player=y.fetchall()
        logging.debug('player',player)
        for i in player:
            self.player_lw.addItem(i[0])
        z=match_cur.execute("select value from teams where name='"+ t +"';")
        score=z.fetchall()
        for j in score:
            self.point_lw.addItem(str(j[0]))

    def final_score(self):
        total_score=0
        t=self.select_team_scb.currentText()### current team name
        logging.debug(t)
        z=match_cur.execute("select value from teams where name='"+ t +"';")
        value=z.fetchall()
        logging.debug('value',value)
        for i in value:
            total_score+=i[0]

        self.score_screen.final_score.setText(str(total_score))### total scor eon screen
        self.scoreDialog.show()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
